<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       ">
    <security:http auto-config="false" use-expressions="true" authentication-manager-ref="authenticationManager">


        <security:form-login
                login-page="/auth/login.do"
                authentication-success-handler-ref="customAuthenticationSuccessHandler" />
        <security:logout
                invalidate-session="true"
                delete-cookies="remember-me, JSESSIONID"
                logout-url="/auth/logout.do"
                success-handler-ref="customLogoutSuccessHandler"
        />
        <security:access-denied-handler ref="customAccessDeniedHandler" /><!-- 권한 거부 -->

        <security:intercept-url pattern="/resources/**" access="permitAll" /> <!-- 정적 리소스 모두 접근 허용 -->
        <security:intercept-url pattern="/auth/login.do" access="permitAll" />
        <security:intercept-url pattern="/auth/forgotPw.do" access="permitAll" /><!-- 비밀번호 잊어버림 -->
        <security:intercept-url pattern="/register/resetPw.do" access="permitAll" /><!-- 비밀번호 초기화 -->
        <security:intercept-url pattern="/" access="permitAll" />
        <security:intercept-url pattern="/index.do" access="permitAll" />
        <security:intercept-url pattern="/register/registerWrite.do" access="permitAll" /> <!-- 회원가입 -->
        <security:intercept-url pattern="/register/memberIdCheck.do" access="permitAll" /> <!-- 회원가입 -->
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> <!-- 관리자만 접근 -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN, ROLE_MEMBER')" /> <!-- 나머지는 인가된 접근(ROLE_MEMBER)만 허용 -->
        <!--<security:intercept-url pattern="/**" access="isAuthenticated()" />  나머지는 인가된 접근만 허용 -->

        <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />

        <security:csrf disabled="true"/><!-- 회원가입 및 로그인 url을 POST로 보낼 때 csrf 확인 안하기 위해 사용 -->
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider" /><!--인증 및 권한 설정 커스텀 -->
        <security:authentication-provider user-service-ref="customUserDetailsService"><!-- 사용자 정보 설정 커스텀 -->
            <security:password-encoder ref="bcryptPasswordEncoder" /><!-- 로그인 비밀번호 암호화 인코딩 -->
        </security:authentication-provider>
    </security:authentication-manager>

    <!--빈(Bean) 설정-->
    <bean id="customAuthenticationSuccessHandler" class="grpstudy.grpware.auth.security.CustomAuthenticationSuccessHandler" /><!-- 로그인 성공 커스텀 bean -->
    <bean id="customAuthenticationProvider" class="grpstudy.grpware.auth.security.CustomAuthenticationProvider"/><!-- 인증 및 권한 설정 커스텀 bean -->
    <bean id="customUserDetailsService" class="grpstudy.grpware.auth.security.CustomUserDetailsService" /><!-- 사용자 정보 설정 커스텀 bean -->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /><!-- 로그인 비밀번호 암호화 인코딩 bean -->
    <bean id="customLogoutSuccessHandler" class="grpstudy.grpware.auth.security.CustomLogoutSuccessHandler" /><!-- 로그아웃 성공 bean -->
    <bean id="customAccessDeniedHandler" class="grpstudy.grpware.auth.security.CustomAccessDeniedHandler" /><!-- 권한 거부 bean -->
</beans>